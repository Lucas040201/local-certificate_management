{"version":3,"file":"users.min.js","sources":["../src/users.js"],"sourcesContent":["import $ from 'jquery';\r\nimport Templates from \"core/templates\";\r\nimport ModalDefault from 'core/modal';\r\nimport ModalEvents from 'core/modal_events';\r\nimport {get_string as getString} from 'core/str';\r\nimport ModalSaveCancel from 'core/modal_save_cancel';\r\nimport Utils from 'local_certificate_management/utils';\r\nimport Repository from 'local_certificate_management/repository';\r\n\r\n\r\nconst getParams = async root => {\r\n    return {\r\n        courseId: Number(root.attr('data-courseid')),\r\n        limit: Number(root.attr('data-limit')),\r\n        page: Number(root.attr('data-page')),\r\n        search: root.find('#search-param').val() || '',\r\n        sort: root.find('#order-param').val() || '',\r\n    };\r\n}\r\n\r\nconst usersComponents = {\r\n    notFound: 'local_certificate_management/components/users/table-row-not-found',\r\n    empty: 'local_certificate_management/components/users/table-row-empty',\r\n    content: 'local_certificate_management/components/users/table-row'\r\n}\r\n\r\nconst loadUsers = async (root, seeMore = false) => {\r\n    try {\r\n        const params = await getParams(root);\r\n        const data = await Repository.retrieveUsers(params);\r\n\r\n        let templateToLoad = usersComponents.content;\r\n\r\n        if (!seeMore && !data.users.length && !params.search) {\r\n            templateToLoad = usersComponents.empty;\r\n        }\r\n\r\n        if (!seeMore && !data.users.length && params.search) {\r\n            Utils.disableButton(root);\r\n            templateToLoad = usersComponents.notFound;\r\n        }\r\n\r\n        if (!seeMore) {\r\n            root.find('.users-content').empty();\r\n            root.find('.total-users').text(0);\r\n        }\r\n\r\n        const html = await Templates.render(templateToLoad, {users: data.users});\r\n\r\n        root.find('.total-users').text(data.total)\r\n\r\n        root.find('.users-content').append(html);\r\n\r\n        const coursesLength = root.find('.users-item').length;\r\n\r\n        if (data.total === coursesLength) {\r\n            Utils.disableButton(root);\r\n        } else if (root.find('.see_more').hasClass('hidden') && data.total > coursesLength) {\r\n            Utils.activeButton(root);\r\n        }\r\n        await issueCertificate(root);\r\n        await issueHistory(root);\r\n    } catch (error) {\r\n        root.find('.users-content').empty();\r\n        root.find('.total-users').text(0);\r\n        const html = await Templates.render(usersComponents.empty, {});\r\n        Utils.disableButton(root);\r\n        root.find('.users-content').append(html);\r\n    }\r\n\r\n}\r\n\r\nconst issueHistory = async root => {\r\n    root.find('.btn-history').off();\r\n    root.find('.btn-history').on('click', async clickEvent => {\r\n\r\n        const hasHistory = $(clickEvent.currentTarget).attr('data-hashistory');\r\n        if(hasHistory === 'true') {\r\n            regenHistory(root, clickEvent);\r\n            return;\r\n        }\r\n        const userId = $(clickEvent.currentTarget).attr('data-userid');\r\n        const userFullName = $(clickEvent.currentTarget).attr('data-username');\r\n\r\n        const modal = await ModalDefault.create({\r\n            title: await getString('modal_issue_history_title', 'local_certificate_management'),\r\n            body: await getString('generate_history', 'local_certificate_management', userFullName),\r\n            isVerticallyCentered: true,\r\n        });\r\n\r\n        modal.setFooter(await Templates.render('local_certificate_management/components/modal/modal_footer_gen_history', {}));\r\n        modal.getRoot().find('.btn.issue').on('click', async event => {\r\n            const params = await getParams(root);\r\n\r\n            await issueHistoryCall(params, userId, userFullName, modal);\r\n        });\r\n\r\n        await modal.show();\r\n    });\r\n}\r\n\r\nconst regenHistory = async (root, event) => {\r\n    const userId = $(event.currentTarget).attr('data-userid');\r\n    const userFullName = $(event.currentTarget).attr('data-username');\r\n    const modal = await ModalDefault.create({\r\n        title: await getString('modal_regen_history', 'local_certificate_management'),\r\n        body: await getString('regen_history', 'local_certificate_management'),\r\n        isVerticallyCentered: true,\r\n    });\r\n\r\n    modal.setFooter(await Templates.render('local_certificate_management/components/modal/modal_footer_regen_history', {}));\r\n\r\n    modal.getRoot().find('.btn.regen').on('click', async event => {\r\n        const params = await getParams(root);\r\n\r\n\r\n        await issueHistoryCall(params, userId, userFullName, modal);\r\n    });\r\n\r\n    modal.getRoot().find('.btn.see').on('click', async event => {\r\n        const params = await getParams(root);\r\n\r\n        Repository.getHistoryUrl({\r\n            courseId: Number(params.courseId),\r\n            userId: Number(userId),\r\n        }).then(async (response) => {\r\n            window.open(response.history, \"_blank\");\r\n        }).catch(async () => {\r\n            modal.hide();\r\n            await ModalDefault.create({\r\n                title: await getString('modal_certified_issued_with_error_title', 'local_certificate_management'),\r\n                body: await getString('modal_certified_issued_not_found_body', 'local_certificate_management'),\r\n                show: true,\r\n                isVerticallyCentered: true\r\n            });\r\n        });\r\n    });\r\n\r\n    await modal.show();\r\n}\r\n\r\nconst issueHistoryCall = async (params, userId, userFullName, modal) => {\r\n    Repository.issueHistory({\r\n        courseId: Number(params.courseId),\r\n        userId: Number(userId),\r\n    }).then(async (response) => {\r\n        modal.destroy();\r\n        await ModalDefault.create({\r\n            title: await getString('modal_history_issued_with_success_title', 'local_certificate_management'),\r\n            body: await getString('modal_history_issued_with_success_body', 'local_certificate_management', {\r\n                history: response.history,\r\n                name: userFullName\r\n            }),\r\n            show: true,\r\n            isVerticallyCentered: true\r\n        });\r\n    }).catch(async () => {\r\n        modal.destroy();\r\n        await ModalDefault.create({\r\n            title: await getString('modal_history_issued_with_error_title', 'local_certificate_management'),\r\n            body: await getString('modal_history_issued_with_error_body', 'local_certificate_management', userFullName),\r\n            show: true,\r\n            isVerticallyCentered: true\r\n        });\r\n    });\r\n}\r\n\r\nconst issueCertificate = async root => {\r\n    root.find('.btn-certificate').off();\r\n    root.find('.btn-certificate').on('click', async clickEvent => {\r\n\r\n        const hasCertificate = $(clickEvent.currentTarget).attr('data-hascertificate');\r\n        if(hasCertificate === 'true') {\r\n            regenCertificate(root, clickEvent);\r\n            return;\r\n        }\r\n        const response = await Repository.retrieveTemplates();\r\n        const userId = $(clickEvent.currentTarget).attr('data-userid');\r\n        const userFullName = $(clickEvent.currentTarget).attr('data-username');\r\n\r\n        const modal = await ModalDefault.create({\r\n            title: await getString('modal_issue_certificate_title', 'local_certificate_management'),\r\n            body: Templates.render('local_certificate_management/components/modal/select_certificate', {templates: response.templates}),\r\n            isVerticallyCentered: true,\r\n        });\r\n\r\n        modal.setFooter(await Templates.render('local_certificate_management/components/modal/modal_footer_issue', {}));\r\n        modal.getRoot().find('.btn.issue').on('click', async event => {\r\n            const selectValue = modal.getRoot().find('.chose-template').val();\r\n            const params = await getParams(root);\r\n\r\n            await issueCertificateCall(selectValue, params, userId, userFullName, modal);\r\n        });\r\n\r\n        await modal.show();\r\n    });\r\n}\r\n\r\nconst regenCertificate = async (root, event) => {\r\n    const response = await Repository.retrieveTemplates();\r\n    const userId = $(event.currentTarget).attr('data-userid');\r\n    const userFullName = $(event.currentTarget).attr('data-username');\r\n    const modal = await ModalDefault.create({\r\n        title: await getString('modal_regen_certificate', 'local_certificate_management'),\r\n        body: Templates.render('local_certificate_management/components/modal/regen_certificate', {templates: response.templates}),\r\n        isVerticallyCentered: true,\r\n    });\r\n\r\n    modal.setFooter(await Templates.render('local_certificate_management/components/modal/modal_footer_regen', {}));\r\n\r\n    modal.getRoot().find('.btn.regen').on('click', async event => {\r\n        const selectValue = modal.getRoot().find('.chose-template').val();\r\n\r\n        const params = await getParams(root);\r\n\r\n\r\n        await issueCertificateCall(selectValue, params, userId, userFullName, modal);\r\n    });\r\n\r\n    modal.getRoot().find('.btn.see').on('click', async event => {\r\n        const params = await getParams(root);\r\n\r\n        Repository.getCertificateUrl({\r\n            courseId: Number(params.courseId),\r\n            userId: Number(userId),\r\n        }).then(async (response) => {\r\n            window.open(response.certificate, \"_blank\");\r\n        }).catch(async () => {\r\n            modal.hide();\r\n            await ModalDefault.create({\r\n                title: await getString('modal_certified_issued_with_error_title', 'local_certificate_management'),\r\n                body: await getString('modal_certified_issued_not_found_body', 'local_certificate_management'),\r\n                show: true,\r\n                isVerticallyCentered: true\r\n            });\r\n        });\r\n    });\r\n\r\n    await modal.show();\r\n}\r\n\r\nconst issueCertificateCall = async (selectValue, params, userId, userFullName, modal) => {\r\n    if(!await validateSelectValue(selectValue)) {\r\n        return;\r\n    }\r\n\r\n    Repository.issueCertificate({\r\n        templateId: Number(selectValue),\r\n        courseId: Number(params.courseId),\r\n        userId: Number(userId),\r\n    }).then(async (response) => {\r\n        console.log(response);\r\n        modal.destroy();\r\n        await ModalDefault.create({\r\n            title: await getString('modal_certified_issued_with_success_title', 'local_certificate_management'),\r\n            body: await getString('modal_certified_issued_with_success_body', 'local_certificate_management', {\r\n                certificate: response.certificate,\r\n                name: userFullName\r\n            }),\r\n            show: true,\r\n            isVerticallyCentered: true\r\n        });\r\n    }).catch(async () => {\r\n        modal.destroy();\r\n        await ModalDefault.create({\r\n            title: await getString('modal_certified_issued_with_error_title', 'local_certificate_management'),\r\n            body: await getString('modal_certified_issued_with_error_body', 'local_certificate_management', userFullName),\r\n            show: true,\r\n            isVerticallyCentered: true\r\n        });\r\n    });\r\n}\r\n\r\nconst validateSelectValue = async (selectValue) => {\r\n    if(selectValue) {\r\n        return true;\r\n    }\r\n    await ModalDefault.create({\r\n        title: await getString('modal_certified_issued_with_error_title', 'local_certificate_management'),\r\n        body: await getString('modal_certified_issued_with_error_body_select', 'local_certificate_management'),\r\n        show: true,\r\n        isVerticallyCentered: true\r\n    });\r\n\r\n    return false;\r\n}\r\n\r\nconst init = async root => {\r\n    await loadUsers(root);\r\n\r\n    let timeout;\r\n    root.find('#search-param').on('keyup', e => {\r\n\r\n        clearTimeout(timeout);\r\n\r\n        timeout = setTimeout(async () => {\r\n            await loadUsers(root);\r\n        }, 2000);\r\n    });\r\n\r\n    root.find('#order-param').on('change', async event => {\r\n        await loadUsers(root);\r\n    });\r\n\r\n    root.find('.see_more').on('click', async function () {\r\n        const newPage = Number(root.attr('data-page')) + 1;\r\n        root.attr('data-page', newPage);\r\n        await loadUsers(root, true);\r\n    });\r\n}\r\n\r\nexport default {\r\n    init\r\n};"],"names":["getParams","async","courseId","Number","root","attr","limit","page","search","find","val","sort","usersComponents","loadUsers","seeMore","params","data","Repository","retrieveUsers","templateToLoad","users","length","disableButton","empty","text","html","Templates","render","total","append","coursesLength","hasClass","activeButton","issueCertificate","issueHistory","error","off","on","clickEvent","currentTarget","regenHistory","userId","userFullName","modal","ModalDefault","create","title","body","isVerticallyCentered","setFooter","getRoot","issueHistoryCall","show","event","getHistoryUrl","then","window","open","response","history","catch","hide","destroy","name","regenCertificate","retrieveTemplates","templates","selectValue","issueCertificateCall","getCertificateUrl","certificate","validateSelectValue","templateId","console","log","init","timeout","e","clearTimeout","setTimeout","newPage"],"mappings":"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"}